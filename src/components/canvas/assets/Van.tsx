/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React from 'react'
import { Html, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { editable as e } from '@theatre/r3f'

type GLTFResult = GLTF & {
  nodes: {
    Mesh_door: THREE.Mesh
    Mesh_door_1: THREE.Mesh
    Mesh_body009: THREE.Mesh
    Mesh_body009_1: THREE.Mesh
    Mesh_body009_2: THREE.Mesh
    Mesh_body009_3: THREE.Mesh
    Mesh_body009_4: THREE.Mesh
    Mesh_body009_5: THREE.Mesh
    Mesh_body009_6: THREE.Mesh
    Mesh_wheel_frontLeft039: THREE.Mesh
    Mesh_wheel_frontLeft039_1: THREE.Mesh
    Mesh_wheel_frontLeft039_2: THREE.Mesh
    Mesh_wheel_frontLeft040: THREE.Mesh
    Mesh_wheel_frontLeft040_1: THREE.Mesh
    Mesh_wheel_frontLeft040_2: THREE.Mesh
    Mesh_wheel_frontLeft041: THREE.Mesh
    Mesh_wheel_frontLeft041_1: THREE.Mesh
    Mesh_wheel_frontLeft041_2: THREE.Mesh
    Mesh_wheel_frontLeft005: THREE.Mesh
    Mesh_wheel_frontLeft005_1: THREE.Mesh
    Mesh_wheel_frontLeft005_2: THREE.Mesh
  }
  materials: {
    ['carTire.023']: THREE.MeshStandardMaterial
    ['_defaultMat.034']: THREE.MeshStandardMaterial
    ['lightBack.016']: THREE.MeshStandardMaterial
    ['paintGreen.007']: THREE.MeshStandardMaterial
    ['plastic.026']: THREE.MeshStandardMaterial
    ['paintWhite.005']: THREE.MeshStandardMaterial
    ['_defaultMat.033']: THREE.MeshStandardMaterial
    ['lightFront.019']: THREE.MeshStandardMaterial
    ['window.021']: THREE.MeshStandardMaterial
    ['carTire.024']: THREE.MeshStandardMaterial
    ['_defaultMat.035']: THREE.MeshStandardMaterial
    ['plastic.027']: THREE.MeshStandardMaterial
    ['carTire.025']: THREE.MeshStandardMaterial
    ['_defaultMat.036']: THREE.MeshStandardMaterial
    ['plastic.028']: THREE.MeshStandardMaterial
    ['carTire.026']: THREE.MeshStandardMaterial
    ['_defaultMat.037']: THREE.MeshStandardMaterial
    ['plastic.029']: THREE.MeshStandardMaterial
    ['carTire.009']: THREE.MeshStandardMaterial
    ['_defaultMat.017']: THREE.MeshStandardMaterial
    ['plastic.010']: THREE.MeshStandardMaterial
  }
}

export function Van(props: JSX.IntrinsicElements['group'] & { theatreKey: string }) {
  const { nodes, materials } = useGLTF('/van.gltf') as GLTFResult
  return (
    <e.group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Mesh_door.geometry} material={materials['carTire.023']} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_door_1.geometry} material={materials['_defaultMat.034']} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_body009.geometry} material={materials['lightBack.016']} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_body009_1.geometry}>
        <meshStandardMaterial color={'#343B34'} />
      </mesh>
      <e.mesh scale={1} theatreKey='ms'>
        <boxGeometry />
        <meshStandardMaterial />
        <Html scale={30} distanceFactor={1.5} position={[0, 0, 0.5]} transform>
          <button className='btn-secondary  btn-outline btn'>Contact me</button>
        </Html>
      </e.mesh>
      <mesh castShadow receiveShadow geometry={nodes.Mesh_body009_2.geometry} material={materials['plastic.026']} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_body009_3.geometry} material={materials['paintWhite.005']} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_body009_4.geometry} material={materials['_defaultMat.033']} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_body009_5.geometry} material={materials['lightFront.019']} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_body009_6.geometry} material={materials['window.021']} />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheel_frontLeft039.geometry}
        material={materials['carTire.024']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheel_frontLeft039_1.geometry}
        material={materials['_defaultMat.035']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheel_frontLeft039_2.geometry}
        material={materials['plastic.027']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheel_frontLeft040.geometry}
        material={materials['carTire.025']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheel_frontLeft040_1.geometry}
        material={materials['_defaultMat.036']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheel_frontLeft040_2.geometry}
        material={materials['plastic.028']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheel_frontLeft041.geometry}
        material={materials['carTire.026']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheel_frontLeft041_1.geometry}
        material={materials['_defaultMat.037']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheel_frontLeft041_2.geometry}
        material={materials['plastic.029']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheel_frontLeft005.geometry}
        material={materials['carTire.009']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheel_frontLeft005_1.geometry}
        material={materials['_defaultMat.017']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheel_frontLeft005_2.geometry}
        material={materials['plastic.010']}
      />
    </e.group>
  )
}

useGLTF.preload('/van.gltf')
