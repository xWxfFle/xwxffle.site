/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { editable as e } from '@theatre/r3f'


type GLTFResult = GLTF & {
  nodes: {
    Cube4230: THREE.Mesh
    Cube4230_1: THREE.Mesh
  }
  materials: {
    ['Stone.050']: THREE.MeshStandardMaterial
    ['StoneDark.011']: THREE.MeshStandardMaterial
  }
}

export function Wall(props: JSX.IntrinsicElements['group'] & { theatreKey: string }) {
  const { nodes, materials } = useGLTF('/wall.gltf') as GLTFResult
  return (
    <e.group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Cube4230.geometry} material={materials['Stone.050']} />
        <mesh castShadow receiveShadow geometry={nodes.Cube4230_1.geometry} material={materials['StoneDark.011']} />
      </group>
    </e.group>
  )
}

useGLTF.preload('/wall.gltf')
