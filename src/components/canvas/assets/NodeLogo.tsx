/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    Plane_1: THREE.Mesh
    Plane_2: THREE.Mesh
    Plane_3: THREE.Mesh
  }
  materials: {
    ['Material.010']: THREE.MeshStandardMaterial
    ['Material.009']: THREE.MeshStandardMaterial
    ['Material.008']: THREE.MeshStandardMaterial
  }
}

export function NodeLogo(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/node-logo.gltf') as GLTFResult
  const mesh = useRef<THREE.Group>(null)
  useFrame((state, delta) => {
    const t = state.clock.getElapsedTime()
    if (!mesh.current) return
    mesh.current.rotation.y += 0.01 

    mesh.current.rotation.z += delta / 4
  })
  return (
    <group {...props} dispose={null} ref={mesh} scale={3} position={[1,2,0]}>
      <mesh castShadow receiveShadow geometry={nodes.Plane_1.geometry} material={materials['Material.010']} />
      <mesh castShadow receiveShadow geometry={nodes.Plane_2.geometry} material={materials['Material.009']} />
      <mesh castShadow receiveShadow geometry={nodes.Plane_3.geometry} material={materials['Material.008']} />
    </group>
  )
}

useGLTF.preload('/node-logo.gltf')
