/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Keyboard_cable: THREE.Mesh
    Case: THREE.Mesh
    Keycaps: THREE.Mesh
  }
  materials: {
    ['Black rubber']: THREE.MeshStandardMaterial
    ['Keycap material']: THREE.MeshStandardMaterial
  }
}

export function Keyboard(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/keyboard.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Keyboard_cable.geometry}
        material={materials['Black rubber']}
        position={[0.59, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Case.geometry}
        material={materials['Black rubber']}
        position={[0.59, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Keycaps.geometry}
        material={materials['Keycap material']}
        position={[0.59, 0, 0]}
      />
    </group>
  )
}

useGLTF.preload('/keyboard.gltf')
