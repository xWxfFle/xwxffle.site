/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { editable as e } from '@theatre/r3f'

type GLTFResult = GLTF & {
  nodes: {
    Cylinder016: THREE.Mesh
    Cylinder016_1: THREE.Mesh
    Cylinder016_2: THREE.Mesh
  }
  materials: {
    ['Red.025']: THREE.MeshStandardMaterial
    ['White.025']: THREE.MeshStandardMaterial
    ['BrownDark.018']: THREE.MeshStandardMaterial
  }
}

export function Target(props: JSX.IntrinsicElements['group'] & { theatreKey: string}) {
  const { nodes, materials } = useGLTF('/target.gltf') as GLTFResult
  return (
    <e.group {...props} dispose={null} theatreKey={props.theatreKey}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Cylinder016.geometry} material={materials['Red.025']} />
        <mesh castShadow receiveShadow geometry={nodes.Cylinder016_1.geometry} material={materials['White.025']} />
        <mesh castShadow receiveShadow geometry={nodes.Cylinder016_2.geometry} material={materials['BrownDark.018']} />
      </group>
    </e.group>
  )
}

useGLTF.preload('/target.gltf')
