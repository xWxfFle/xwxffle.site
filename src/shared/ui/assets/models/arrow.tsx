'use client'

/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import { editable as e } from '@theatre/r3f'
import React from 'react'
import * as THREE from 'three'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cylinder001: THREE.Mesh
    Cylinder001_1: THREE.Mesh
    Cylinder001_2: THREE.Mesh
  }
  materials: {
    ['Metal.004']: THREE.MeshStandardMaterial
    ['BrownDark.006']: THREE.MeshStandardMaterial
    ['Blue.003']: THREE.MeshStandardMaterial
  }
}

export const Arrow = (
  props: JSX.IntrinsicElements['group'] & { theatreKey: string },
) => {
  const { nodes, materials } = useGLTF('/models/arrow.gltf') as GLTFResult
  return (
    <e.group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder001.geometry}
          material={materials['Metal.004']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder001_1.geometry}
          material={materials['BrownDark.006']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder001_2.geometry}
          material={materials['Blue.003']}
        />
      </group>
    </e.group>
  )
}

useGLTF.preload('/models/arrow.gltf')
